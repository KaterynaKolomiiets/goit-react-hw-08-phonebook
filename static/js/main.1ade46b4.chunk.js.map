{"version":3,"sources":["components/Filter/Filter.module.css","redux/user/user-operations.js","redux/user/user-auth-selectors.js","components/AppBar/UserMenu/UserMenu.jsx","components/AppBar/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","views/RegisterView/RegisterView.jsx","views/LoginView/LoginView.jsx","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","App.js","redux/contacts/contacts-reducers.js","redux/user/user-reducers/user-auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","BASE_URL","token","axios","defaults","headers","common","Authorization","usersLogInOperation","createAsyncThunk","user","a","post","data","console","log","message","usersLogoutOperation","usersSignUpOperation","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","getIsLoggedIn","isLoggedIn","userName","name","getIsFetchingCurrentUser","isFetchingCurrent","UserMenu","dispatch","useDispatch","useSelector","className","Button","type","variant","onClick","AuthNav","activeClassName","to","exact","Navigation","Container","Row","Col","RegisterView","useState","setName","email","setEmail","password","setPassword","updateState","target","value","Form","onSubmit","e","preventDefault","controlId","FloatingLabel","label","Control","placeholder","pattern","title","required","onChange","LoginView","fetchPhoneBookContacts","Error","addPhoneBookContact","newContact","contacts","items","some","item","toLowerCase","Notify","warning","removePhoneBookContact","id","delete","ContactForm","number","setNumber","autoComplete","setFilter","createAction","Filter","s","filter","ContactListItem","props","ListGroup","Item","getItems","getFilter","ContactList","undefined","length","includes","map","onDelete","v4","ContactsView","useEffect","PrivateRoute","children","routeProps","PublicRoute","restricted","shouldRedirect","App","AppBar","path","itemsReducer","createReducer","fulfilled","action","payload","filterReducer","errorReducer","rejected","error","contactsReducer","combineReducers","userReducer","tokenReducer","pending","errorsReducer","authReducer","err","authPersistConfig","key","storage","whitelist","rootReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1ade46b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5Dh\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const usersLogInOperation = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (user) => {\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/users/login`, user);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const usersLogoutOperation = createAsyncThunk(\r\n  \"auth/logout\",\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/users/logout`);\r\n      token.unset();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const usersSignUpOperation = createAsyncThunk(\r\n  \"auth/signup\",\r\n  async (user) => {\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/users/signup`, user);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (!persistedToken) {\r\n      console.log(\"no token\");\r\n      return thunkAPI.rejectWithValue(\"User is logged out\");\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(`${BASE_URL}/users/current`);\r\n      return data;\r\n    } catch (error) {}\r\n  }\r\n);\r\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nexport const userName = (state) => state.auth.user.name;\r\nexport const getIsFetchingCurrentUser = (state) => state.auth.isFetchingCurrent;\r\n","import { usersLogoutOperation } from \"../../../redux/user/user-operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userName } from \"../../../redux/user/user-auth-selectors\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userName);\r\n  console.log(user);\r\n  return (\r\n    <>\r\n      <div className=\"nav\">\r\n        <span className=\"userWelcomeMessage\">\r\n          Welcome, <span className=\"userName\">{user}</span>\r\n        </span>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"primary\"\r\n          onClick={() => dispatch(usersLogoutOperation())}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <NavLink\r\n        className=\"link authLink\"\r\n        activeClassName=\"linkActive\"\r\n        to=\"/register\"\r\n        exact\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        className=\"link authLink\"\r\n        activeClassName=\"linkActive\"\r\n        to=\"/login\"\r\n        exact\r\n      >\r\n        LOGIN\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import UserMenu from \"./UserMenu/UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../redux/user/user-auth-selectors\";\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className=\"header\">\r\n      <Container>\r\n        <Row>\r\n          <Col>{isLoggedIn ? <UserMenu /> : <AuthNav />}</Col>\r\n        </Row>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { usersSignUpOperation } from \"../../redux/user/user-operations\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst RegisterView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const updateState = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(usersSignUpOperation({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form className=\"form\" onSubmit={handleSubmit} controlId=\"registrationForm\">\r\n      <h1>Register</h1>\r\n\r\n      <FloatingLabel label=\"Name and Surname\" className=\"mb-3\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Name and Surname\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={updateState}\r\n        />\r\n      </FloatingLabel>\r\n\r\n      <FloatingLabel label=\"Email\" className=\"mb-3\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"name@example.com\"\r\n          name=\"email\"\r\n          required\r\n          onChange={updateState}\r\n        />\r\n      </FloatingLabel>\r\n\r\n      <FloatingLabel label=\"Password\" className=\"mb-3\">\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Type your password\"\r\n          name=\"password\"\r\n          required\r\n          onChange={updateState}\r\n        />\r\n      </FloatingLabel>\r\n\r\n      <Button type=\"submit\" onChange={updateState} variant=\"primary\">\r\n        Register\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { usersLogInOperation } from \"../../redux/user/user-operations\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const updateState = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(usersLogInOperation({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form className=\"form\" onSubmit={handleSubmit}>\r\n      <h1 className=\"formHeader\">Login </h1>\r\n      <FloatingLabel label=\"Email\" className=\"mb-3\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n          onChange={updateState}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel label=\"Password\" className=\"mb-3\">\r\n        <Form.Control\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n          onChange={updateState}\r\n        />\r\n      </FloatingLabel>\r\n      <Button type=\"submit\" variant=\"primary\">\r\n        Login\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import {\r\n//   fetchContacts,\r\n//   addContact,\r\n//   removeContact,\r\n//   fetchCurrentUser\r\n// } from \"../../services/connections-api\";\r\nimport axios from \"axios\";\r\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\r\n\r\n\r\nconst BASE_URL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchPhoneBookContacts = createAsyncThunk(\r\n  \"contacts/fetchPhoneBookContacts\",\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get(`${BASE_URL}/contacts`);\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\nexport const addPhoneBookContact = createAsyncThunk(\r\n  \"contacts/addPhoneBookContact\",\r\n  async (newContact, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    console.log(state);\r\n    if (\r\n      state.contacts.items.some(\r\n        (item) => item.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      Notify.warning(`${newContact.name} is already in your contacts`);\r\n      return thunkAPI.rejectWithValue(\r\n        `Naming conflict: user *${newContact.name}* already exists`\r\n      );\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/contacts`, newContact);\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const removePhoneBookContact = createAsyncThunk(\r\n  \"contacts/removePhoneBookContact\",\r\n  async (id) => {\r\n    try {\r\n      axios.delete(`${BASE_URL}/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addPhoneBookContact } from \"../../redux/contacts/contacts-operations\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const updateState = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addPhoneBookContact({ name, number }));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form className=\"form\" onSubmit={handleSubmit}>\r\n      <FloatingLabel label=\"Name and Surname\" className=\"mb-3\">\r\n        <Form.Control\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={updateState}\r\n          value={name}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel label=\"Number\" className=\"mb-3\">\r\n        <Form.Control\r\n          autoComplete=\"off\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={updateState}\r\n          value={number}\r\n        />\r\n      </FloatingLabel>\r\n      <Button type=\"submit\" variant=\"primary\">\r\n        Add Contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/add\");\r\nexport const deleteContact = createAction(\"contact/delete\");\r\nexport const setFilter = createAction(\"set/filter\");\r\n","import s from \"./Filter.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const search = ({ target: { value } }) => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <Form className=\"form\">\r\n     <FloatingLabel label=\"Filter\" className=\"mb-3\">\r\n      <Form.Control className={s.filter} type=\"text\" name=\"filter\" onChange={search} />\r\n      </FloatingLabel>\r\n      </Form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport { removePhoneBookContact } from \"../../../redux/contacts/contacts-operations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst ContactListItem = ({ props: { name, number, id } }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ListGroup.Item id={id} className=\"listItem\">\r\n      <span className=\"contactName\">{name}</span>\r\n      <span className=\"contactPhone\">{number}</span>\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"primary\"\r\n        onClick={() => dispatch(removePhoneBookContact(id))}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  props: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import ContactListItem from \"./ContactListItem\";\r\nimport { v4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getItems, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport { removePhoneBookContact } from \"../../redux/contacts/contacts-operations\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(getItems);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  let contacts = undefined;\r\n\r\n  if (items.length > 0) {\r\n    contacts = items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListGroup className=\"listGroup\">\r\n      {contacts?.map((item) => (\r\n        <ContactListItem\r\n          key={v4()}\r\n          props={item}\r\n          onDelete={() => dispatch(removePhoneBookContact(item.id))}\r\n        />\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useEffect } from \"react\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\nimport Filter from \"../../components/Filter\";\r\nimport ContactList from \"../../components/ContactList\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\r\nimport {\r\n  fetchPhoneBookContacts,\r\n} from \"../../redux/contacts/contacts-operations\";\r\n\r\nconst ContactsView = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(getItems);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPhoneBookContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../redux/user/user-auth-selectors\";\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../redux/user/user-auth-selectors\";\r\n\r\nconst PublicRoute = ({ children, restricted = false, ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to=\"/contacts\" /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import \"./App.css\";\n\nimport AppBar from \"./components/AppBar\";\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\nimport ContactsView from \"./views/ContactsView\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { Switch, Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchCurrentUser } from \".//redux/user/user-operations\";\nimport { getIsFetchingCurrentUser } from \"./redux/user/user-auth-selectors\";\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isFetchingCurrent = useSelector(getIsFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!isFetchingCurrent && (\n        <div className=\"App\">\n          <AppBar />\n          <Container>\n            <Row>\n              <Col>\n                <Switch>\n                  <PublicRoute path=\"/register\" restricted exact>\n                    <RegisterView />\n                  </PublicRoute>\n\n                  <PublicRoute path=\"/login\" restricted exact>\n                    <LoginView />\n                  </PublicRoute>\n\n                  <PrivateRoute path=\"/contacts\" exact>\n                    <ContactsView />\n                  </PrivateRoute>\n                  <Redirect to=\"/login\" />\n                </Switch>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { setFilter } from \"./contacts-actions\";\r\nimport {\r\n  fetchPhoneBookContacts,\r\n  addPhoneBookContact,\r\n  removePhoneBookContact,\r\n} from \"./contacts-operations\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchPhoneBookContacts.fulfilled]: (_, action) => action.payload,\r\n  [addPhoneBookContact.fulfilled]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [removePhoneBookContact.fulfilled]: (state, action) =>\r\n    [...state].filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst errorReducer = createReducer([], {\r\n  [fetchPhoneBookContacts.rejected]: (state, action) => [\r\n    ...state,\r\n    action.error,\r\n  ],\r\n  [addPhoneBookContact.rejected]: (state, action) => [...state, action.error],\r\n  [removePhoneBookContact.rejected]: (state, action) => [\r\n    ...state,\r\n    action.error,\r\n  ],\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  usersLogInOperation,\r\n  usersLogoutOperation,\r\n  usersSignUpOperation,\r\n  fetchCurrentUser,\r\n} from \"../user-operations\";\r\n\r\nconst userReducer = createReducer(\r\n  {},\r\n  {\r\n    [usersSignUpOperation.fulfilled]: (_, action) => action.payload.user,\r\n    [usersLogInOperation.fulfilled]: (_, action) => action.payload.user,\r\n    [usersLogoutOperation.fulfilled]: () => [],\r\n    [fetchCurrentUser.fulfilled]: (_, action) => action.payload,\r\n  }\r\n);\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [usersSignUpOperation.fulfilled]: (_, action) => action.payload.token,\r\n  [usersLogInOperation.fulfilled]: (_, action) => action.payload.token,\r\n  [usersLogoutOperation.fulfilled]: () => null,\r\n});\r\nconst isLoggedIn = createReducer(false, {\r\n  [usersSignUpOperation.fulfilled]: () => true,\r\n  [usersLogInOperation.fulfilled]: () => true,\r\n  [usersLogoutOperation.fulfilled]: () => false,\r\n  [fetchCurrentUser.fulfilled]: () => true,\r\n});\r\n\r\nconst isFetchingCurrent = createReducer(false, {\r\n  [fetchCurrentUser.pending]: () => true,\r\n  [fetchCurrentUser.fulfilled]: () => false,\r\n  [fetchCurrentUser.rejected]: () => false,\r\n});\r\n\r\nconst errorsReducer = createReducer([], {\r\n  [usersLogInOperation.rejected]: (state, _) => state,\r\n  [usersLogoutOperation.rejected]: (state, _) => state,\r\n  [usersSignUpOperation.rejected]: (state, _) => state,\r\n\r\n  // do I need pending status if I don't process it?\r\n  [usersLogInOperation.pending]: (state, _) => state,\r\n  [usersLogoutOperation.pending]: (state, _) => state,\r\n  [usersSignUpOperation.pending]: (state, _) => state,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  isLoggedIn: isLoggedIn,\r\n  isFetchingCurrent: isFetchingCurrent,\r\n  err: errorsReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducers\";\r\nimport { authReducer } from \"./user/user-reducers/user-auth-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  // FLUSH,\r\n  // REHYDRATE,\r\n  // PAUSE,\r\n  // PERSIST,\r\n  // PURGE,\r\n  // REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\", \"user\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}