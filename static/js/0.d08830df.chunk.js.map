{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/FormGroup.js"],"names":["FormContext","React","Button","ref","as","bsPrefix","variant","size","active","className","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps","FloatingLabel","children","controlId","label","_jsxs","FormGroup","htmlFor","_excluded","target","rel","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","_ref","asProp","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","propTypes","PropTypes","string","tooltip","bool","elementType","Feedback","FormCheckInput","id","isValid","isInvalid","useContext","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","feedbackTooltip","feedback","feedbackType","style","title","innerFormContext","useMemo","hasLabel","input","Provider","value","_Fragment","Input","Label","FormControl","classes","htmlSize","plaintext","readOnly","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","createWithBsPrefix","BsComponent","Tag","resolvedPrefix","FormLabel","column","visuallyHidden","columnClass","Col","FormRange","FormSelect","FormText","muted","Switch","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","warning","module","exports","context"],"mappings":"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","file":"static/js/0.d08830df.chunk.js","sourcesContent":["import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;"],"sourceRoot":""}