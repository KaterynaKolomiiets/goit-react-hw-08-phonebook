{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/user/user-auth-selectors.js","redux/contacts/contacts-actions.js","redux/user/user-operations.js","App.js","redux/contacts/contacts-reducers.js","redux/user/user-reducers/user-auth-reducer.js","redux/store.js","index.js"],"names":["BASE_URL","fetchPhoneBookContacts","createAsyncThunk","a","axios","get","data","Error","addPhoneBookContact","newContact","thunkAPI","getState","contacts","items","some","item","name","toLowerCase","Notify","warning","rejectWithValue","post","removePhoneBookContact","id","delete","getIsLoggedIn","state","auth","isLoggedIn","userName","user","getIsFetchingCurrentUser","isFetchingCurrent","setFilter","createAction","token","defaults","headers","common","Authorization","usersLogInOperation","usersLogoutOperation","usersSignUpOperation","fetchCurrentUser","_","persistedToken","AppBar","lazy","RegisterView","LoginView","ContactsView","PrivateRoute","PublicRoute","App","dispatch","useDispatch","useSelector","useEffect","className","fallback","Container","Row","Col","path","restricted","exact","to","itemsReducer","createReducer","fulfilled","action","payload","filter","filterReducer","errorReducer","rejected","error","contactsReducer","combineReducers","userReducer","tokenReducer","pending","errorsReducer","authReducer","err","authPersistConfig","key","storage","whitelist","rootReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1ebd8c6e.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import {\r\n//   fetchContacts,\r\n//   addContact,\r\n//   removeContact,\r\n//   fetchCurrentUser\r\n// } from \"../../services/connections-api\";\r\nimport axios from \"axios\";\r\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\r\n\r\n\r\nconst BASE_URL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchPhoneBookContacts = createAsyncThunk(\r\n  \"contacts/fetchPhoneBookContacts\",\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get(`${BASE_URL}/contacts`);\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\nexport const addPhoneBookContact = createAsyncThunk(\r\n  \"contacts/addPhoneBookContact\",\r\n  async (newContact, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    if (\r\n      state.contacts.items.some(\r\n        (item) => item.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      Notify.warning(`${newContact.name} is already in your contacts`);\r\n      return thunkAPI.rejectWithValue(\r\n        `Naming conflict: user *${newContact.name}* already exists`\r\n      );\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/contacts`, newContact);\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const removePhoneBookContact = createAsyncThunk(\r\n  \"contacts/removePhoneBookContact\",\r\n  async (id) => {\r\n    try {\r\n      axios.delete(`${BASE_URL}/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nexport const userName = (state) => state.auth.user.name;\r\nexport const getIsFetchingCurrentUser = (state) => state.auth.isFetchingCurrent;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/add\");\r\nexport const deleteContact = createAction(\"contact/delete\");\r\nexport const setFilter = createAction(\"set/filter\");\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const usersLogInOperation = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (user) => {\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/users/login`, user);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n     throw new Error (error)\r\n    }\r\n  }\r\n);\r\n\r\nexport const usersLogoutOperation = createAsyncThunk(\r\n  \"auth/logout\",\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/users/logout`);\r\n      token.unset();\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const usersSignUpOperation = createAsyncThunk(\r\n  \"auth/signup\",\r\n  async (user) => {\r\n    try {\r\n      const { data } = await axios.post(`${BASE_URL}/users/signup`, user);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n       throw new Error(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (!persistedToken) {\r\n      return thunkAPI.rejectWithValue(\"User is logged out\");\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(`${BASE_URL}/users/current`);\r\n      return data;\r\n    } catch (error) {\r\n       throw new Error(error);\r\n    }\r\n  }\r\n);\r\n","import \"./App.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { Switch, Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { lazy, useEffect, Suspense} from \"react\";\nimport { fetchCurrentUser } from \".//redux/user/user-operations\";\nimport { getIsFetchingCurrentUser } from \"./redux/user/user-auth-selectors\";\n\nconst AppBar = lazy(() =>\n  import(\"./components/AppBar\" /*webpackChunkName: \"AppBar\" */)\n);\nconst RegisterView = lazy(() =>\n  import(\"./views/RegisterView\" /*webpackChunkName: \"RegisterView\" */)\n);\nconst LoginView = lazy(() =>\n  import(\"./views/LoginView\" /*webpackChunkName: \"LoginView\" */)\n);\nconst ContactsView = lazy(() =>\n  import(\"./views/ContactsView\" /*webpackChunkName: \"ContactsView\" */)\n);\nconst PrivateRoute = lazy(() =>\n  import(\"./components/PrivateRoute\" /*webpackChunkName: \"PrivateRoute\" */)\n);\nconst PublicRoute = lazy(() =>\n  import(\"./components/PublicRoute\" /*webpackChunkName: \"PublicRoute\" */)\n);\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isFetchingCurrent = useSelector(getIsFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!isFetchingCurrent && (\n        <div className=\"App\">\n          <Suspense fallback={<h1>LOADING...</h1>}>\n          <AppBar />\n          <Container>\n            <Row>\n              <Col>\n                <Switch>\n                  <PublicRoute path=\"/register\" restricted exact>\n                    <RegisterView />\n                  </PublicRoute>\n\n                  <PublicRoute path=\"/login\" restricted exact>\n                    <LoginView />\n                  </PublicRoute>\n\n                  <PrivateRoute path=\"/contacts\" exact>\n                    <ContactsView />\n                  </PrivateRoute>\n                  <Redirect to=\"/login\" />\n                </Switch>\n              </Col>\n            </Row>\n          </Container>\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { setFilter } from \"./contacts-actions\";\r\nimport {\r\n  fetchPhoneBookContacts,\r\n  addPhoneBookContact,\r\n  removePhoneBookContact,\r\n} from \"./contacts-operations\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchPhoneBookContacts.fulfilled]: (_, action) => action.payload,\r\n  [addPhoneBookContact.fulfilled]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [removePhoneBookContact.fulfilled]: (state, action) =>\r\n    [...state].filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst errorReducer = createReducer([], {\r\n  [fetchPhoneBookContacts.rejected]: (state, action) => [\r\n    ...state,\r\n    action.error,\r\n  ],\r\n  [addPhoneBookContact.rejected]: (state, action) => [...state, action.error],\r\n  [removePhoneBookContact.rejected]: (state, action) => [\r\n    ...state,\r\n    action.error,\r\n  ],\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  usersLogInOperation,\r\n  usersLogoutOperation,\r\n  usersSignUpOperation,\r\n  fetchCurrentUser,\r\n} from \"../user-operations\";\r\n\r\nconst userReducer = createReducer(\r\n  {},\r\n  {\r\n    [usersSignUpOperation.fulfilled]: (_, action) => action.payload.user,\r\n    [usersLogInOperation.fulfilled]: (_, action) => action.payload.user,\r\n    [usersLogoutOperation.fulfilled]: () => [],\r\n    [fetchCurrentUser.fulfilled]: (_, action) => action.payload,\r\n  }\r\n);\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [usersSignUpOperation.fulfilled]: (_, action) => action.payload.token,\r\n  [usersLogInOperation.fulfilled]: (_, action) => action.payload.token,\r\n  [usersLogoutOperation.fulfilled]: () => null,\r\n});\r\nconst isLoggedIn = createReducer(false, {\r\n  [usersSignUpOperation.fulfilled]: () => true,\r\n  [usersLogInOperation.fulfilled]: () => true,\r\n  [usersLogoutOperation.fulfilled]: () => false,\r\n  [fetchCurrentUser.fulfilled]: () => true,\r\n});\r\n\r\nconst isFetchingCurrent = createReducer(false, {\r\n  [fetchCurrentUser.pending]: () => true,\r\n  [fetchCurrentUser.fulfilled]: () => false,\r\n  [fetchCurrentUser.rejected]: () => false,\r\n});\r\n\r\nconst errorsReducer = createReducer([], {\r\n  [usersLogInOperation.rejected]: (state, _) => state,\r\n  [usersLogoutOperation.rejected]: (state, _) => state,\r\n  [usersSignUpOperation.rejected]: (state, _) => state,\r\n\r\n  // do I need pending status if I don't process it?\r\n  [usersLogInOperation.pending]: (state, _) => state,\r\n  [usersLogoutOperation.pending]: (state, _) => state,\r\n  [usersSignUpOperation.pending]: (state, _) => state,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  isLoggedIn: isLoggedIn,\r\n  isFetchingCurrent: isFetchingCurrent,\r\n  err: errorsReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducers\";\r\nimport { authReducer } from \"./user/user-reducers/user-auth-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\", \"user\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}