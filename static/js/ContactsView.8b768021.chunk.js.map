{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx","components/Filter/Filter.module.css"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","updateState","target","value","Form","className","onSubmit","e","preventDefault","addPhoneBookContact","FloatingLabel","label","Control","autoComplete","type","pattern","title","required","onChange","Button","variant","Filter","s","filter","setFilter","ContactListItem","props","id","ListGroup","Item","onClick","removePhoneBookContact","getItems","state","contacts","items","getFilter","ContactList","useSelector","undefined","length","item","toLowerCase","includes","map","onDelete","v4","ContactsView","useEffect","fetchPhoneBookContacts","module","exports"],"mappings":"iQAuEeA,EA/DK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAWC,cAEXC,EAAc,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACrC,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,SAWN,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,SARJ,SAACC,GACpBA,EAAEC,iBACFT,EAASU,YAAoB,CAAEd,OAAME,YACrCD,EAAQ,IACRE,EAAU,KAIV,UACE,cAACY,EAAA,EAAD,CAAeC,MAAM,mBAAmBN,UAAU,OAAlD,SACE,cAACD,EAAA,EAAKQ,QAAN,CACEC,aAAa,MACbC,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUjB,EACVE,MAAOR,MAGX,cAACe,EAAA,EAAD,CAAeC,MAAM,SAASN,UAAU,OAAxC,SACE,cAACD,EAAA,EAAKQ,QAAN,CACEC,aAAa,MACbC,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUjB,EACVE,MAAON,MAGX,cAACsB,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,UAA9B,6B,yBCtCSC,EAhBA,WACb,IAAMtB,EAAWC,cAMjB,OACE,cAACI,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACC,cAACK,EAAA,EAAD,CAAeC,MAAM,SAASN,UAAU,OAAxC,SACC,cAACD,EAAA,EAAKQ,QAAN,CAAcP,UAAWiB,IAAEC,OAAQT,KAAK,OAAOnB,KAAK,SAASuB,SAPlD,SAAC,GAA2B,IAAff,EAAc,EAAxBD,OAAUC,MAC1BJ,EAASyB,YAAUrB,Y,QCsBRsB,EA1BS,SAAC,GAAqC,IAAD,IAAlCC,MAAS/B,EAAyB,EAAzBA,KAAME,EAAmB,EAAnBA,OAAQ8B,EAAW,EAAXA,GAC1C5B,EAAWC,cAEjB,OACE,eAAC4B,EAAA,EAAUC,KAAX,CAAgBF,GAAIA,EAAItB,UAAU,WAAlC,UACE,sBAAMA,UAAU,cAAhB,SAA+BV,IAC/B,sBAAMU,UAAU,eAAhB,SAAgCR,IAChC,cAACsB,EAAA,EAAD,CACEL,KAAK,SACLM,QAAQ,UACRU,QAAS,kBAAM/B,EAASgC,YAAuBJ,KAHjD,wB,SCbOK,EAAW,SAACC,GAAD,OAAWA,EAAMC,SAASC,OACrCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASX,QCgCpCc,EAzBK,WAAO,IAAD,EAClBF,EAAQG,YAAYN,GACpBT,EAASe,YAAYF,GACrBrC,EAAWC,cACbkC,OAAWK,EAQf,OANIJ,EAAMK,OAAS,IACjBN,EAAWC,EAAMZ,QAAO,SAACkB,GAAD,OACtBA,EAAK9C,KAAK+C,cAAcC,SAASpB,EAAOmB,mBAK1C,cAACd,EAAA,EAAD,CAAWvB,UAAU,YAArB,mBACG6B,SADH,aACG,EAAUU,KAAI,SAACH,GAAD,OACb,cAAC,EAAD,CAEEf,MAAOe,EACPI,SAAU,kBAAM9C,EAASgC,YAAuBU,EAAKd,OAFhDmB,qBCGAC,EAlBM,WACnB,IAAMhD,EAAWC,cAMjB,OAJAgD,qBAAU,WACRjD,EAASkD,iBACR,CAAClD,IAGF,qCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,S,mBCrBNmD,EAAOC,QAAU,CAAC,OAAS","file":"static/js/ContactsView.8b768021.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addPhoneBookContact } from \"../../redux/contacts/contacts-operations\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const updateState = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addPhoneBookContact({ name, number }));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form className=\"form\" onSubmit={handleSubmit}>\r\n      <FloatingLabel label=\"Name and Surname\" className=\"mb-3\">\r\n        <Form.Control\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={updateState}\r\n          value={name}\r\n        />\r\n      </FloatingLabel>\r\n      <FloatingLabel label=\"Number\" className=\"mb-3\">\r\n        <Form.Control\r\n          autoComplete=\"off\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={updateState}\r\n          value={number}\r\n        />\r\n      </FloatingLabel>\r\n      <Button type=\"submit\" variant=\"primary\">\r\n        Add Contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from \"./Filter.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const search = ({ target: { value } }) => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <Form className=\"form\">\r\n     <FloatingLabel label=\"Filter\" className=\"mb-3\">\r\n      <Form.Control className={s.filter} type=\"text\" name=\"filter\" onChange={search} />\r\n      </FloatingLabel>\r\n      </Form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport { removePhoneBookContact } from \"../../../redux/contacts/contacts-operations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst ContactListItem = ({ props: { name, number, id } }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ListGroup.Item id={id} className=\"listItem\">\r\n      <span className=\"contactName\">{name}</span>\r\n      <span className=\"contactPhone\">{number}</span>\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"primary\"\r\n        onClick={() => dispatch(removePhoneBookContact(id))}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  props: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import ContactListItem from \"./ContactListItem\";\r\nimport { v4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getItems, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport { removePhoneBookContact } from \"../../redux/contacts/contacts-operations\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(getItems);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  let contacts = undefined;\r\n\r\n  if (items.length > 0) {\r\n    contacts = items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListGroup className=\"listGroup\">\r\n      {contacts?.map((item) => (\r\n        <ContactListItem\r\n          key={v4()}\r\n          props={item}\r\n          onDelete={() => dispatch(removePhoneBookContact(item.id))}\r\n        />\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useEffect } from \"react\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\nimport Filter from \"../../components/Filter\";\r\nimport ContactList from \"../../components/ContactList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchPhoneBookContacts,\r\n} from \"../../redux/contacts/contacts-operations\";\r\n\r\nconst ContactsView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPhoneBookContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5Dh\"};"],"sourceRoot":""}