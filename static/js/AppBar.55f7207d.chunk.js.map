{"version":3,"sources":["components/AppBar/UserMenu/UserMenu.jsx","components/AppBar/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/@restart/ui/esm/Button.js"],"names":["UserMenu","dispatch","useDispatch","user","useSelector","userName","className","Button","type","variant","onClick","usersLogoutOperation","AuthNav","activeClassName","to","exact","Navigation","isLoggedIn","getIsLoggedIn","Container","Row","Col","React","ref","as","bsPrefix","size","active","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps","_excluded","target","rel","tabIndex","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","_ref","asProp","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign"],"mappings":"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","file":"static/js/AppBar.55f7207d.chunk.js","sourcesContent":["import { usersLogoutOperation } from \"../../../redux/user/user-operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userName } from \"../../../redux/user/user-auth-selectors\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(userName);\r\n  return (\r\n    <>\r\n      <div className=\"nav\">\r\n        <span className=\"userWelcomeMessage\">\r\n          Welcome, <span className=\"userName\">{user}</span>\r\n        </span>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"primary\"\r\n          onClick={() => dispatch(usersLogoutOperation())}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <NavLink\r\n        className=\"link authLink\"\r\n        activeClassName=\"linkActive\"\r\n        to=\"/register\"\r\n        exact\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        className=\"link authLink\"\r\n        activeClassName=\"linkActive\"\r\n        to=\"/login\"\r\n        exact\r\n      >\r\n        LOGIN\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import UserMenu from \"./UserMenu/UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../redux/user/user-auth-selectors\";\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className=\"header\">\r\n      <Container>\r\n        <Row>\r\n          <Col>{isLoggedIn ? <UserMenu /> : <AuthNav />}</Col>\r\n        </Row>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;"],"sourceRoot":""}